/* Global */

:root {
    /* Color */
    --color-white: #ffffff;
    --color-light-white: #eeeeee;
    --color-dark-white: #bdbdbd;
    --color-pink: #fe918d;
    --color-dark-pink: #ff6863;
    --color-dark-grey: #4d4d4d;
    --color-grey: #616161;
    --color-light-grey: #7c7979;
    --color-blue: #73aace;
    --color-yellow: #fff7d1;
    --color-orange: #feb546;
    --color-black: #000000;
    --color-deep-purple: #8460cb;
    --color-nav-purple: #9c8dbd;
    --color-light-purple: #e7b9ff;
    --color-purple: #8876b3;

    /* Font size */
    --font-large: 48px;
    --font-medium: 28px;
    --font-regular: 18px;
    --font-small: 16px;
    --font-micro: 14px;

    /* Font weight */
    --weight-bold: 700;
    --weight-semi-bold: 600;
    --weight-regular: 400;

    /* Size */
    --size-border-radius: 4px; 

    /* Animation */
    --animation-duration: 300ms;
}


/* Universal tags */
* {
    box-sizing: border-box;
}

body {
    font-family: 'Open Sans', sans-serif;
    margin: 0;
    /* 마우스가 텍스트위 올라갔을 때 상태 */
    cursor: default;
}

a {
    text-decoration: none;
    color: var(--color-white);
}

ul {
    /* list-style: none > 리스트 옆에 점 없애기 */
    list-style: none;
    padding-left: 0;
}

button {
    background-color: transparent;
    cursor: pointer;
    border: none;
    outline: none;
}

/* Typography */

h1 {
    font-size: var(--font-large);
    font-weight: var(--weight-bold);
    color: var(--color-black);
    margin: 16px 0px;
}

h2 {
    font-size: var(--font-medium);
    font-weight: var(--weight-semi-bold);
    color: var(--color-black);
    margin: 8px 0;
}

h3 {
    font-size: var(--font-regular);
    font-weight: var(--weight-regular);
    color: var(--color-black);
    margin: 8px 0;
}

p {
    font-size: var(--font-regular);
    font-weight: var(--weight-regular);
    color: var(--color-black);
    margin: 4px 0;
}

/* Navbar */
/* # = id 선택자 */
#navbar {
    /* fixed > 원래 위치와 상관없이 위치지정, 
    상위 요소에 영향 안받음 */
    position: fixed;
    width: 100%;
    display: flex;
    justify-content: space-between;
    background-color: transparent;
    /* align-items = 로고 가운데로 정렬 */
    align-items: center;
    color: var(--color-white);
    padding: 16px;
    transition: all var(--animation-duration) ease-in-out;
    /* z-index: 1 > navbar는 무슨일이 있어도 제일 위에 있어야함 */
    z-index: 1;
}

#navbar.navbar--dark {
    background-color: var(--color-nav-purple);
    padding: 16px;
}

/* . = class 선택자 */
.navbar__menu {
    display: flex;
    margin: -16px;
}

.navbar__logo {
    font-size: var(--font-medium);
    font-weight: var(--weight-semi-bold);
}

/* 첫번째: 위아래, 두번쨰: 양옆 */
.navbar__menu__item {
    padding: 8px 12px;
    margin: 0 4px;
    /* pointer = 클릭가능상태 */
    cursor: pointer;
    border-radius: var(--size-border-radius);
}

.navbar__menu__item.active {
    border: 1px solid var(--color-white);
}

.navbar__menu__item:hover {
    background-color: var(--color-deep-purple);
}

.navbar__toggle-btn {
    position: absolute;
    /* right: ??px > 오른쪽에서 ??px 떨어진 곳에 위치 */
    top: 24px;
    right: 32px;
    font-size: 24px;
    color: var(--color-white);
    /* opacity로 할경우 투명도 설정이기 때문에
        마우스가 hover될 경우 클릭이 됨 */
    display: none;
}

/* Home */
#home {
    background: url('imgs/background.png') center/cover no-repeat;
    padding: 40px;
    padding-top: 120px;
    /* text-align: 중앙으로 */
    text-align: center;
}

.home__avatar {
    width: 250px;
    height: 250px;
    border-radius: 50%;
    border: 2px solid var(--color-light-white);
}

.home__title,
.home__description {
    color: var(--color-white);
}

.home__contact {
    color: var(--color-white);
    font-size: var(--weight-regular);
    margin: 24px;
    padding: 8px 12px;
    border: 2px solid var(--color-white); 
    border-radius: var(--size-border-radius);
}

.home__contact:hover {
    background-color: var(--color-purple);
}

/* Section common */
.section {
    padding: 50px;
    text-align: center;
    max-width: 1200px;
    margin: auto;
}

.section__container {
    max-width: 1200px;
    margin: auto;
}

/* About */
.about__majors {
    display: flex;
    /* 아이템별 간격 띄우기 */
    justify-content: space-between;
    margin: 80px 0;
}

.major__icon {
    width: 170px;
    height: 170px;
    /* icon 위치조정 170 똑같이 */
    line-height: 170px; 
    /* icon 크기 */
    font-size: 70px;
    margin: auto;
    color: var(--color-blue);
    border: 1px solid var(--color-blue);
    border-radius: 50%;
    margin-bottom: 16px;
}
.major__icon i {
    /* 300ms > 답답하지 않을 표준화된 수치 */
    transition: all var(--animation-duration) ease;

}
.major__icon:hover i {
    color: var(--color-purple);
    transform: rotate(-30deg) scale(1.1);
}
.major__title, 
.major__description {
    color: var(--color-dark-grey);
}

.major__description {
    font-size: var(--font-small);
}

.job {
    display: flex;
    align-items: center;
}

.job__description {
    margin: 0 16px;
    text-align: center;
}

.job__name,
.job__period {
    color: var(--color-light-grey);
}

.job__name {
    font-size: var(--font-small);
}

.job__period {
    font-size: var(--font-micro);
}

/* Skills */
#skills {
    background-color: var(--color-yellow);
}

.skillset {
    display: flex;
    background-color: var(--color-light-grey);
    color: var(--color-light-white);
    margin: 20px 0;
}

.skillset__title {
    color: var(--color-white);
}

.skillset__left {
    flex-basis: 60%;
    background-color: var(--color-dark-grey);
    /* pading: 상하 좌우; */
    padding: 20px 40px;
}

.skill {
    margin-bottom: 32px;
}

.skill__description {
    display: flex;
    /* 아이템 사이 공간 띄우기 */
    justify-content: space-between;
}

.skill__bar {
    width: 100%;
    height: 4px;
    background-color: var(--color-grey);
}

.skill__value {
    height: 3px;
    background-color: var(--color-orange);
}

.skillset__right {
    flex-basis: 40%;
}

.tools {
    background-color: var(--color-grey);
}

.tools,
.etc {
    padding: 20px;
}

/* Work */
.work__category {
    margin: 40px;
}

.category__btn {
    border: 1px solid var(--color-dark-white);
    border-radius: var(--size-border-radius);
    font-size: var(--font-regular);
    padding: 8px 48px;
    position: relative;
}

.category__btn.active,
.category__btn:hover {
    background-color: var(--color-nav-purple);
    color: var(--color-white);
}

.category__btn.active .category__count,
.category__btn:hover .category__count {
    opacity: 1;
    top: 0;
}

.category__count {
    background-color: var(--color-orange);
    /* border-radius: 50% > 동그랗게 */
    border-radius: 50%;
    color: var(--color-white);
    width: 24px;
    height: 24px;
    line-height: 24px;
    /* span은 컨텐츠를 꽉 감싸주는 사이즈임
    >> 인라인 블럭으로 바꿔줘야 동그라미 형태 유지 */
    display: inline-block;
    position: absolute;
    top: -20px ;
    right: 16px;
    /* 안보이게 설정 */
    opacity: 0;
    transition: all var(--animation-duration) ease-in;
}

.work__projects {
    display: flex;
    /* 화면이 꽉차면 줄바꿈 정리 */
    flex-wrap: wrap;
    justify-content: center;
    opacity: 1;
    transition: all var(--animation-duration) ease-out;
}

.work__projects.anim-out {
    opacity: 0.6;
    transform: scale(0.9) translateY(40px);
}

.project {
    position: relative;
    display: flex;
    justify-content: center;
    align-items: center;
    width: 280px;
    height: 250px;
    margin: 2px;
    background-color: var(--color-light-white);
}

.project.invisible {
    display: none;
}

.project__img {
    max-width: 100%;
    max-height: 100%;
}

.project__description {
    /* position: absolute 를 쓰면
    1.근접한 부모 노드중 기본값인 position: static이 아닌
    부모를 찾아가게된다.
    2.부모인 project는 기본값이기 때문에 가장 위까지 간다.
    3.그래서 project에 position: relative를 써서
    project에서 position을 결정하게 해준다.
     */
    position: absolute;
    background-color: var(--color-black);
    display: flex;
    flex-direction: column;
    justify-content: center;
    width: 100%;
    height: 100%;
    top: 0;
    left: 0;
    opacity: 0;
    transform: translateY(10px);
    transition: all var(--animation-duration) ease-in;
}

.project:hover .project__description {
    opacity: 0.8;
    transform: translateY(0px);
}

.project__description h3 {
    color: var(--color-orange);
}

.project__description h3:after {
    /* h3 다음에 css로 선긋기 */
    content: '';
    display: block;
    position: relative;
    left: 50%;
    width: 50px;
    height: 2px;
    transform: translateX(-50%);
    margin-top: 8px;
    background-color: var(--color-dark-white);
}

/* Testimonial */
#testimonials {
    background-color: var(--color-light-white);
}

.testimonials {
    margin: 40px;
}

.testimonial {
    display: flex;
    margin: 32px 0;
}

.testimonial__avatar {
    width: 150px;
    height: 150px;
    border-radius: 50%;
}
    /* nth-child() >> odd=홀수일 때, even=짝수일 때 */
.testimonial__avatar:nth-child(odd) {
    margin-right: 40px;
}

.testimonial__avatar:nth-child(even) {
    margin-left: 40px;
}

.testimonial__speech-bubble {
    padding: 18px;
    background-color: var(--color-white);
}

.testimonial__speech-bubble p {
    color: var(--color-light-grey);
}

.testimonial__speech-bubble a {
    color: var(--color-purple);
}

/* Contact */
#contact {
    background-color: var(--color-purple);
}

.contact__title,
.contact__email,
.contact__rights {
    color: var(--color-white);
}

.contact__title {
    margin: 32px 0;
}

.contact__links {
    font-size: var(--font-large);
    margin: 24px 0;
}

.contact__links i {
    transition: all var(--animation-duration) ease-in;
}

.contact__links i:hover {
    transform: scale(1.1);
    color: var(--color-yellow);
}


/* Scroll */
.arrow-up {
    position: fixed;
    bottom: 50px;
    right: 50px;
    width: 70px;
    height: 70px;
    font-size: 50px;
    background-color: var(--color-nav-purple);
    color: var(--color-white);
    border-radius: 50%;
    pointer-events: none;
    opacity: 0;
    transition: opacity 300ms ease-in;
}

.arrow-up.visible {
    opacity: 1;
    pointer-events: auto;
}

/* For below 768px screen width */
@media screen and (max-width: 768px) {
    :root {
        /* Font size */
        --font-large: 30px;
        --font-medium: 18px;
        --font-regular: 16px;
        --font-small: 14px;
        --font-micro: 12px;
    }

    .navbar__toggle-btn {
        display: block;
        top: 16px;
        right: 16px;
        font-size: var(--font-medium);
    }

    #navbar {
        flex-direction: column;
        /* column일 경우 수직으로 중심으로 시작하기때문에
            flex-start로 왼쪽으로 정렬 */
        align-items: flex-start;
        background-color: var(--color-nav-purple);
    }

    #navbar.navbar-dark {
        padding: 16px;
    }

    .navbar__menu {
        flex-direction: column;
        text-align: center;
        width: 100%;
        display: none;
        padding-top: 32px;
    }

    .navbar__menu.open {
        display: block;
    }

    .section {
        padding: 16px;
        padding-top: 40px;
    }

    .about__majors {
        flex-direction: column;
        margin-top: 30px;
        margin-bottom: 0px;
    }

    .major {
        margin-bottom: 30px;
    }

    .skillset {
        flex-direction: column;
    }

    .category__btn {
        margin: 4px 0;
        width: 100%;
    }

    .project {
        /* flex-grow: 1 > 화면에 맞춰서 꽉 채워줌 */
        flex-grow: 1;
    }

    .testimonial {
        flex-direction: column;
        align-items: center;
    }

    .testimonial__avatar {
        width: 120px;
        height: 120px;
    }

    .testimonial__avatar:nth-child(even),
    .testimonial__avatar:nth-child(odd) {
        margin: 0px;
        margin-bottom: 8px;
    }

    .testimonial__speech-bubble {
        order: 1;
    }

    .arrow-up {
        width: 50px;
        height: 50px;
        font-size: 30px;
        line-height: 50px;
        right: 16px;
        bottom: 16px;
    }
}



/* 
- Summary -
기본적인 꿀팁: cmd + opt + i 로 개발자옵션 켜서 (or F12)
    마진이나 패딩이 들어갔는지 수시로 확인하면서 코딩하기
list-style: none > 리스트 옆에 점 없애기
    기본값은 검은 원

    * flex
flex-direction: 의 기본값은 row이다. (양옆으로)
    위아래로 바꿀 경우 column
flex-grow: 1 > 화면에 맞춰서 꽉 채워줌

    * position
position: 기본은 static이다.
position: relative > static의 원래 위치부터 계산
position: fixed > 원래 위치와 상관없이 위치지정, 
    상위 요소에 영향 안받음
position: absolute > 원래 위치와 상관없이 위치지정,
    가장 가까운 상위 요소 기준으로 위치 영향 받음
    absolute 쓸 경우
    1.근접한 부모 노드중 기본값인 position: static이 아닌
    부모를 찾아가게된다.
    2.부모인 project는 기본값이기 때문에 가장 위까지 간다.
    3.그래서 project에 position: relative를 써서
    project에서 position을 결정하게 해준다.

@media 쿼리문에 들어갈 내용은 최소한의 것만 들어가야한다.
    반응형 팁은 flex-direction: column; 으로 설정하면
    대부분 예쁘게 수직으로 떨어짐.

opacity로 할경우 투명도 설정이기 때문에
    마우스가 hover될 경우 클릭이 됨
    따라서, 아예 지울 경우 display: none; 을 이용한다.
*/